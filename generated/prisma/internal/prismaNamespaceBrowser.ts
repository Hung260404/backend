
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models.ts'
export type * from './prismaNamespace.ts'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  Articles: 'Articles',
  ChatGroupMembers: 'ChatGroupMembers',
  ChatGroups: 'ChatGroups',
  ChatMessages: 'ChatMessages',
  Chats: 'Chats',
  Permissions: 'Permissions',
  RolePermission: 'RolePermission',
  Roles: 'Roles',
  TABLE_TEMPLATE: 'TABLE_TEMPLATE',
  Users: 'Users'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const ArticlesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  imageUrl: 'imageUrl',
  views: 'views',
  userId: 'userId',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ArticlesScalarFieldEnum = (typeof ArticlesScalarFieldEnum)[keyof typeof ArticlesScalarFieldEnum]


export const ChatGroupMembersScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  chatGroupId: 'chatGroupId',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ChatGroupMembersScalarFieldEnum = (typeof ChatGroupMembersScalarFieldEnum)[keyof typeof ChatGroupMembersScalarFieldEnum]


export const ChatGroupsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  ownerId: 'ownerId',
  keyForChatOne: 'keyForChatOne',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ChatGroupsScalarFieldEnum = (typeof ChatGroupsScalarFieldEnum)[keyof typeof ChatGroupsScalarFieldEnum]


export const ChatMessagesScalarFieldEnum = {
  id: 'id',
  chatGroupId: 'chatGroupId',
  userIdSender: 'userIdSender',
  messageText: 'messageText',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ChatMessagesScalarFieldEnum = (typeof ChatMessagesScalarFieldEnum)[keyof typeof ChatMessagesScalarFieldEnum]


export const ChatsScalarFieldEnum = {
  id: 'id',
  message: 'message',
  userId: 'userId',
  roomId: 'roomId',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ChatsScalarFieldEnum = (typeof ChatsScalarFieldEnum)[keyof typeof ChatsScalarFieldEnum]


export const PermissionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  endpoint: 'endpoint',
  method: 'method',
  module: 'module',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PermissionsScalarFieldEnum = (typeof PermissionsScalarFieldEnum)[keyof typeof PermissionsScalarFieldEnum]


export const RolePermissionScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  permissionId: 'permissionId',
  isActive: 'isActive',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type RolePermissionScalarFieldEnum = (typeof RolePermissionScalarFieldEnum)[keyof typeof RolePermissionScalarFieldEnum]


export const RolesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


export const TABLE_TEMPLATEScalarFieldEnum = {
  id: 'id',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type TABLE_TEMPLATEScalarFieldEnum = (typeof TABLE_TEMPLATEScalarFieldEnum)[keyof typeof TABLE_TEMPLATEScalarFieldEnum]


export const UsersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  fullName: 'fullName',
  avatar: 'avatar',
  password: 'password',
  facebookId: 'facebookId',
  googleId: 'googleId',
  roleId: 'roleId',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const ArticlesOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content',
  imageUrl: 'imageUrl'
} as const

export type ArticlesOrderByRelevanceFieldEnum = (typeof ArticlesOrderByRelevanceFieldEnum)[keyof typeof ArticlesOrderByRelevanceFieldEnum]


export const ChatGroupsOrderByRelevanceFieldEnum = {
  name: 'name',
  keyForChatOne: 'keyForChatOne'
} as const

export type ChatGroupsOrderByRelevanceFieldEnum = (typeof ChatGroupsOrderByRelevanceFieldEnum)[keyof typeof ChatGroupsOrderByRelevanceFieldEnum]


export const ChatMessagesOrderByRelevanceFieldEnum = {
  messageText: 'messageText'
} as const

export type ChatMessagesOrderByRelevanceFieldEnum = (typeof ChatMessagesOrderByRelevanceFieldEnum)[keyof typeof ChatMessagesOrderByRelevanceFieldEnum]


export const ChatsOrderByRelevanceFieldEnum = {
  message: 'message',
  roomId: 'roomId'
} as const

export type ChatsOrderByRelevanceFieldEnum = (typeof ChatsOrderByRelevanceFieldEnum)[keyof typeof ChatsOrderByRelevanceFieldEnum]


export const PermissionsOrderByRelevanceFieldEnum = {
  name: 'name',
  endpoint: 'endpoint',
  method: 'method',
  module: 'module'
} as const

export type PermissionsOrderByRelevanceFieldEnum = (typeof PermissionsOrderByRelevanceFieldEnum)[keyof typeof PermissionsOrderByRelevanceFieldEnum]


export const RolesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
} as const

export type RolesOrderByRelevanceFieldEnum = (typeof RolesOrderByRelevanceFieldEnum)[keyof typeof RolesOrderByRelevanceFieldEnum]


export const UsersOrderByRelevanceFieldEnum = {
  email: 'email',
  fullName: 'fullName',
  avatar: 'avatar',
  password: 'password',
  facebookId: 'facebookId',
  googleId: 'googleId'
} as const

export type UsersOrderByRelevanceFieldEnum = (typeof UsersOrderByRelevanceFieldEnum)[keyof typeof UsersOrderByRelevanceFieldEnum]


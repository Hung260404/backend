
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Articles` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Articles
 * 
 */
export type ArticlesModel = runtime.Types.Result.DefaultSelection<Prisma.$ArticlesPayload>

export type AggregateArticles = {
  _count: ArticlesCountAggregateOutputType | null
  _avg: ArticlesAvgAggregateOutputType | null
  _sum: ArticlesSumAggregateOutputType | null
  _min: ArticlesMinAggregateOutputType | null
  _max: ArticlesMaxAggregateOutputType | null
}

export type ArticlesAvgAggregateOutputType = {
  id: number | null
  views: number | null
  userId: number | null
  deletedBy: number | null
}

export type ArticlesSumAggregateOutputType = {
  id: number | null
  views: number | null
  userId: number | null
  deletedBy: number | null
}

export type ArticlesMinAggregateOutputType = {
  id: number | null
  title: string | null
  content: string | null
  imageUrl: string | null
  views: number | null
  userId: number | null
  deletedBy: number | null
  isDeleted: boolean | null
  deletedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ArticlesMaxAggregateOutputType = {
  id: number | null
  title: string | null
  content: string | null
  imageUrl: string | null
  views: number | null
  userId: number | null
  deletedBy: number | null
  isDeleted: boolean | null
  deletedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ArticlesCountAggregateOutputType = {
  id: number
  title: number
  content: number
  imageUrl: number
  views: number
  userId: number
  deletedBy: number
  isDeleted: number
  deletedAt: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ArticlesAvgAggregateInputType = {
  id?: true
  views?: true
  userId?: true
  deletedBy?: true
}

export type ArticlesSumAggregateInputType = {
  id?: true
  views?: true
  userId?: true
  deletedBy?: true
}

export type ArticlesMinAggregateInputType = {
  id?: true
  title?: true
  content?: true
  imageUrl?: true
  views?: true
  userId?: true
  deletedBy?: true
  isDeleted?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type ArticlesMaxAggregateInputType = {
  id?: true
  title?: true
  content?: true
  imageUrl?: true
  views?: true
  userId?: true
  deletedBy?: true
  isDeleted?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type ArticlesCountAggregateInputType = {
  id?: true
  title?: true
  content?: true
  imageUrl?: true
  views?: true
  userId?: true
  deletedBy?: true
  isDeleted?: true
  deletedAt?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ArticlesAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Articles to aggregate.
   */
  where?: Prisma.ArticlesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Articles to fetch.
   */
  orderBy?: Prisma.ArticlesOrderByWithRelationInput | Prisma.ArticlesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ArticlesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Articles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Articles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Articles
  **/
  _count?: true | ArticlesCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ArticlesAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ArticlesSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ArticlesMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ArticlesMaxAggregateInputType
}

export type GetArticlesAggregateType<T extends ArticlesAggregateArgs> = {
      [P in keyof T & keyof AggregateArticles]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateArticles[P]>
    : Prisma.GetScalarType<T[P], AggregateArticles[P]>
}




export type ArticlesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ArticlesWhereInput
  orderBy?: Prisma.ArticlesOrderByWithAggregationInput | Prisma.ArticlesOrderByWithAggregationInput[]
  by: Prisma.ArticlesScalarFieldEnum[] | Prisma.ArticlesScalarFieldEnum
  having?: Prisma.ArticlesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ArticlesCountAggregateInputType | true
  _avg?: ArticlesAvgAggregateInputType
  _sum?: ArticlesSumAggregateInputType
  _min?: ArticlesMinAggregateInputType
  _max?: ArticlesMaxAggregateInputType
}

export type ArticlesGroupByOutputType = {
  id: number
  title: string | null
  content: string | null
  imageUrl: string | null
  views: number
  userId: number
  deletedBy: number
  isDeleted: boolean
  deletedAt: Date | null
  createdAt: Date
  updatedAt: Date
  _count: ArticlesCountAggregateOutputType | null
  _avg: ArticlesAvgAggregateOutputType | null
  _sum: ArticlesSumAggregateOutputType | null
  _min: ArticlesMinAggregateOutputType | null
  _max: ArticlesMaxAggregateOutputType | null
}

type GetArticlesGroupByPayload<T extends ArticlesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ArticlesGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ArticlesGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ArticlesGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ArticlesGroupByOutputType[P]>
      }
    >
  >



export type ArticlesWhereInput = {
  AND?: Prisma.ArticlesWhereInput | Prisma.ArticlesWhereInput[]
  OR?: Prisma.ArticlesWhereInput[]
  NOT?: Prisma.ArticlesWhereInput | Prisma.ArticlesWhereInput[]
  id?: Prisma.IntFilter<"Articles"> | number
  title?: Prisma.StringNullableFilter<"Articles"> | string | null
  content?: Prisma.StringNullableFilter<"Articles"> | string | null
  imageUrl?: Prisma.StringNullableFilter<"Articles"> | string | null
  views?: Prisma.IntFilter<"Articles"> | number
  userId?: Prisma.IntFilter<"Articles"> | number
  deletedBy?: Prisma.IntFilter<"Articles"> | number
  isDeleted?: Prisma.BoolFilter<"Articles"> | boolean
  deletedAt?: Prisma.DateTimeNullableFilter<"Articles"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"Articles"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Articles"> | Date | string
}

export type ArticlesOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrderInput | Prisma.SortOrder
  content?: Prisma.SortOrderInput | Prisma.SortOrder
  imageUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  views?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _relevance?: Prisma.ArticlesOrderByRelevanceInput
}

export type ArticlesWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ArticlesWhereInput | Prisma.ArticlesWhereInput[]
  OR?: Prisma.ArticlesWhereInput[]
  NOT?: Prisma.ArticlesWhereInput | Prisma.ArticlesWhereInput[]
  title?: Prisma.StringNullableFilter<"Articles"> | string | null
  content?: Prisma.StringNullableFilter<"Articles"> | string | null
  imageUrl?: Prisma.StringNullableFilter<"Articles"> | string | null
  views?: Prisma.IntFilter<"Articles"> | number
  userId?: Prisma.IntFilter<"Articles"> | number
  deletedBy?: Prisma.IntFilter<"Articles"> | number
  isDeleted?: Prisma.BoolFilter<"Articles"> | boolean
  deletedAt?: Prisma.DateTimeNullableFilter<"Articles"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"Articles"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Articles"> | Date | string
}, "id">

export type ArticlesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrderInput | Prisma.SortOrder
  content?: Prisma.SortOrderInput | Prisma.SortOrder
  imageUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  views?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ArticlesCountOrderByAggregateInput
  _avg?: Prisma.ArticlesAvgOrderByAggregateInput
  _max?: Prisma.ArticlesMaxOrderByAggregateInput
  _min?: Prisma.ArticlesMinOrderByAggregateInput
  _sum?: Prisma.ArticlesSumOrderByAggregateInput
}

export type ArticlesScalarWhereWithAggregatesInput = {
  AND?: Prisma.ArticlesScalarWhereWithAggregatesInput | Prisma.ArticlesScalarWhereWithAggregatesInput[]
  OR?: Prisma.ArticlesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ArticlesScalarWhereWithAggregatesInput | Prisma.ArticlesScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Articles"> | number
  title?: Prisma.StringNullableWithAggregatesFilter<"Articles"> | string | null
  content?: Prisma.StringNullableWithAggregatesFilter<"Articles"> | string | null
  imageUrl?: Prisma.StringNullableWithAggregatesFilter<"Articles"> | string | null
  views?: Prisma.IntWithAggregatesFilter<"Articles"> | number
  userId?: Prisma.IntWithAggregatesFilter<"Articles"> | number
  deletedBy?: Prisma.IntWithAggregatesFilter<"Articles"> | number
  isDeleted?: Prisma.BoolWithAggregatesFilter<"Articles"> | boolean
  deletedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Articles"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Articles"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Articles"> | Date | string
}

export type ArticlesCreateInput = {
  title?: string | null
  content?: string | null
  imageUrl?: string | null
  views?: number
  userId: number
  deletedBy?: number
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ArticlesUncheckedCreateInput = {
  id?: number
  title?: string | null
  content?: string | null
  imageUrl?: string | null
  views?: number
  userId: number
  deletedBy?: number
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ArticlesUpdateInput = {
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  views?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.IntFieldUpdateOperationsInput | number
  deletedBy?: Prisma.IntFieldUpdateOperationsInput | number
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArticlesUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  views?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.IntFieldUpdateOperationsInput | number
  deletedBy?: Prisma.IntFieldUpdateOperationsInput | number
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArticlesCreateManyInput = {
  id?: number
  title?: string | null
  content?: string | null
  imageUrl?: string | null
  views?: number
  userId: number
  deletedBy?: number
  isDeleted?: boolean
  deletedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ArticlesUpdateManyMutationInput = {
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  views?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.IntFieldUpdateOperationsInput | number
  deletedBy?: Prisma.IntFieldUpdateOperationsInput | number
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArticlesUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  views?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.IntFieldUpdateOperationsInput | number
  deletedBy?: Prisma.IntFieldUpdateOperationsInput | number
  isDeleted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArticlesOrderByRelevanceInput = {
  fields: Prisma.ArticlesOrderByRelevanceFieldEnum | Prisma.ArticlesOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type ArticlesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  views?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArticlesAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  views?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
}

export type ArticlesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  views?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArticlesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  views?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArticlesSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  views?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}



export type ArticlesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  content?: boolean
  imageUrl?: boolean
  views?: boolean
  userId?: boolean
  deletedBy?: boolean
  isDeleted?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["articles"]>



export type ArticlesSelectScalar = {
  id?: boolean
  title?: boolean
  content?: boolean
  imageUrl?: boolean
  views?: boolean
  userId?: boolean
  deletedBy?: boolean
  isDeleted?: boolean
  deletedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ArticlesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "content" | "imageUrl" | "views" | "userId" | "deletedBy" | "isDeleted" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["articles"]>

export type $ArticlesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Articles"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    title: string | null
    content: string | null
    imageUrl: string | null
    views: number
    userId: number
    deletedBy: number
    isDeleted: boolean
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["articles"]>
  composites: {}
}

export type ArticlesGetPayload<S extends boolean | null | undefined | ArticlesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ArticlesPayload, S>

export type ArticlesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ArticlesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ArticlesCountAggregateInputType | true
  }

export interface ArticlesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Articles'], meta: { name: 'Articles' } }
  /**
   * Find zero or one Articles that matches the filter.
   * @param {ArticlesFindUniqueArgs} args - Arguments to find a Articles
   * @example
   * // Get one Articles
   * const articles = await prisma.articles.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ArticlesFindUniqueArgs>(args: Prisma.SelectSubset<T, ArticlesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ArticlesClient<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Articles that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ArticlesFindUniqueOrThrowArgs} args - Arguments to find a Articles
   * @example
   * // Get one Articles
   * const articles = await prisma.articles.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ArticlesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ArticlesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArticlesClient<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Articles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticlesFindFirstArgs} args - Arguments to find a Articles
   * @example
   * // Get one Articles
   * const articles = await prisma.articles.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ArticlesFindFirstArgs>(args?: Prisma.SelectSubset<T, ArticlesFindFirstArgs<ExtArgs>>): Prisma.Prisma__ArticlesClient<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Articles that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticlesFindFirstOrThrowArgs} args - Arguments to find a Articles
   * @example
   * // Get one Articles
   * const articles = await prisma.articles.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ArticlesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ArticlesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArticlesClient<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Articles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticlesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Articles
   * const articles = await prisma.articles.findMany()
   * 
   * // Get first 10 Articles
   * const articles = await prisma.articles.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const articlesWithIdOnly = await prisma.articles.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ArticlesFindManyArgs>(args?: Prisma.SelectSubset<T, ArticlesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Articles.
   * @param {ArticlesCreateArgs} args - Arguments to create a Articles.
   * @example
   * // Create one Articles
   * const Articles = await prisma.articles.create({
   *   data: {
   *     // ... data to create a Articles
   *   }
   * })
   * 
   */
  create<T extends ArticlesCreateArgs>(args: Prisma.SelectSubset<T, ArticlesCreateArgs<ExtArgs>>): Prisma.Prisma__ArticlesClient<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Articles.
   * @param {ArticlesCreateManyArgs} args - Arguments to create many Articles.
   * @example
   * // Create many Articles
   * const articles = await prisma.articles.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ArticlesCreateManyArgs>(args?: Prisma.SelectSubset<T, ArticlesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Articles.
   * @param {ArticlesDeleteArgs} args - Arguments to delete one Articles.
   * @example
   * // Delete one Articles
   * const Articles = await prisma.articles.delete({
   *   where: {
   *     // ... filter to delete one Articles
   *   }
   * })
   * 
   */
  delete<T extends ArticlesDeleteArgs>(args: Prisma.SelectSubset<T, ArticlesDeleteArgs<ExtArgs>>): Prisma.Prisma__ArticlesClient<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Articles.
   * @param {ArticlesUpdateArgs} args - Arguments to update one Articles.
   * @example
   * // Update one Articles
   * const articles = await prisma.articles.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ArticlesUpdateArgs>(args: Prisma.SelectSubset<T, ArticlesUpdateArgs<ExtArgs>>): Prisma.Prisma__ArticlesClient<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Articles.
   * @param {ArticlesDeleteManyArgs} args - Arguments to filter Articles to delete.
   * @example
   * // Delete a few Articles
   * const { count } = await prisma.articles.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ArticlesDeleteManyArgs>(args?: Prisma.SelectSubset<T, ArticlesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Articles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticlesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Articles
   * const articles = await prisma.articles.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ArticlesUpdateManyArgs>(args: Prisma.SelectSubset<T, ArticlesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Articles.
   * @param {ArticlesUpsertArgs} args - Arguments to update or create a Articles.
   * @example
   * // Update or create a Articles
   * const articles = await prisma.articles.upsert({
   *   create: {
   *     // ... data to create a Articles
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Articles we want to update
   *   }
   * })
   */
  upsert<T extends ArticlesUpsertArgs>(args: Prisma.SelectSubset<T, ArticlesUpsertArgs<ExtArgs>>): Prisma.Prisma__ArticlesClient<runtime.Types.Result.GetResult<Prisma.$ArticlesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Articles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticlesCountArgs} args - Arguments to filter Articles to count.
   * @example
   * // Count the number of Articles
   * const count = await prisma.articles.count({
   *   where: {
   *     // ... the filter for the Articles we want to count
   *   }
   * })
  **/
  count<T extends ArticlesCountArgs>(
    args?: Prisma.Subset<T, ArticlesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ArticlesCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Articles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticlesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ArticlesAggregateArgs>(args: Prisma.Subset<T, ArticlesAggregateArgs>): Prisma.PrismaPromise<GetArticlesAggregateType<T>>

  /**
   * Group by Articles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticlesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ArticlesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ArticlesGroupByArgs['orderBy'] }
      : { orderBy?: ArticlesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ArticlesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticlesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Articles model
 */
readonly fields: ArticlesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Articles.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ArticlesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Articles model
 */
export interface ArticlesFieldRefs {
  readonly id: Prisma.FieldRef<"Articles", 'Int'>
  readonly title: Prisma.FieldRef<"Articles", 'String'>
  readonly content: Prisma.FieldRef<"Articles", 'String'>
  readonly imageUrl: Prisma.FieldRef<"Articles", 'String'>
  readonly views: Prisma.FieldRef<"Articles", 'Int'>
  readonly userId: Prisma.FieldRef<"Articles", 'Int'>
  readonly deletedBy: Prisma.FieldRef<"Articles", 'Int'>
  readonly isDeleted: Prisma.FieldRef<"Articles", 'Boolean'>
  readonly deletedAt: Prisma.FieldRef<"Articles", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"Articles", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Articles", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Articles findUnique
 */
export type ArticlesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * Filter, which Articles to fetch.
   */
  where: Prisma.ArticlesWhereUniqueInput
}

/**
 * Articles findUniqueOrThrow
 */
export type ArticlesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * Filter, which Articles to fetch.
   */
  where: Prisma.ArticlesWhereUniqueInput
}

/**
 * Articles findFirst
 */
export type ArticlesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * Filter, which Articles to fetch.
   */
  where?: Prisma.ArticlesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Articles to fetch.
   */
  orderBy?: Prisma.ArticlesOrderByWithRelationInput | Prisma.ArticlesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Articles.
   */
  cursor?: Prisma.ArticlesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Articles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Articles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Articles.
   */
  distinct?: Prisma.ArticlesScalarFieldEnum | Prisma.ArticlesScalarFieldEnum[]
}

/**
 * Articles findFirstOrThrow
 */
export type ArticlesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * Filter, which Articles to fetch.
   */
  where?: Prisma.ArticlesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Articles to fetch.
   */
  orderBy?: Prisma.ArticlesOrderByWithRelationInput | Prisma.ArticlesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Articles.
   */
  cursor?: Prisma.ArticlesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Articles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Articles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Articles.
   */
  distinct?: Prisma.ArticlesScalarFieldEnum | Prisma.ArticlesScalarFieldEnum[]
}

/**
 * Articles findMany
 */
export type ArticlesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * Filter, which Articles to fetch.
   */
  where?: Prisma.ArticlesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Articles to fetch.
   */
  orderBy?: Prisma.ArticlesOrderByWithRelationInput | Prisma.ArticlesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Articles.
   */
  cursor?: Prisma.ArticlesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Articles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Articles.
   */
  skip?: number
  distinct?: Prisma.ArticlesScalarFieldEnum | Prisma.ArticlesScalarFieldEnum[]
}

/**
 * Articles create
 */
export type ArticlesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * The data needed to create a Articles.
   */
  data: Prisma.XOR<Prisma.ArticlesCreateInput, Prisma.ArticlesUncheckedCreateInput>
}

/**
 * Articles createMany
 */
export type ArticlesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Articles.
   */
  data: Prisma.ArticlesCreateManyInput | Prisma.ArticlesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Articles update
 */
export type ArticlesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * The data needed to update a Articles.
   */
  data: Prisma.XOR<Prisma.ArticlesUpdateInput, Prisma.ArticlesUncheckedUpdateInput>
  /**
   * Choose, which Articles to update.
   */
  where: Prisma.ArticlesWhereUniqueInput
}

/**
 * Articles updateMany
 */
export type ArticlesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Articles.
   */
  data: Prisma.XOR<Prisma.ArticlesUpdateManyMutationInput, Prisma.ArticlesUncheckedUpdateManyInput>
  /**
   * Filter which Articles to update
   */
  where?: Prisma.ArticlesWhereInput
  /**
   * Limit how many Articles to update.
   */
  limit?: number
}

/**
 * Articles upsert
 */
export type ArticlesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * The filter to search for the Articles to update in case it exists.
   */
  where: Prisma.ArticlesWhereUniqueInput
  /**
   * In case the Articles found by the `where` argument doesn't exist, create a new Articles with this data.
   */
  create: Prisma.XOR<Prisma.ArticlesCreateInput, Prisma.ArticlesUncheckedCreateInput>
  /**
   * In case the Articles was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ArticlesUpdateInput, Prisma.ArticlesUncheckedUpdateInput>
}

/**
 * Articles delete
 */
export type ArticlesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
  /**
   * Filter which Articles to delete.
   */
  where: Prisma.ArticlesWhereUniqueInput
}

/**
 * Articles deleteMany
 */
export type ArticlesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Articles to delete
   */
  where?: Prisma.ArticlesWhereInput
  /**
   * Limit how many Articles to delete.
   */
  limit?: number
}

/**
 * Articles without action
 */
export type ArticlesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Articles
   */
  select?: Prisma.ArticlesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Articles
   */
  omit?: Prisma.ArticlesOmit<ExtArgs> | null
}
